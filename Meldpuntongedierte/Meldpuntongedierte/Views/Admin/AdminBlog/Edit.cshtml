@model Meldpunt.Models.BlogModel

@{
  ViewBag.Title = "Edit Blog";
  Layout = "~/Views/Shared/_Admin.cshtml";
}

<h1>@Model.Title</h1>

@if (Model.LastModified.HasValue)
{
  <p>Laatst aangepast: @Model.LastModified.Value.ToString("f")</p>
}
<div class="actions">
  <button onclick="$('#opslaan').click()" class="btn btn-info">Opslaan</button>
  <a class="btn btn-info" href="/blog/@Model.UrlPart" target="_blank">Pagina bekijken</a>
</div>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.Id)

  <div class="field">
    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })

    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
  </div>

  <div class="field">
    @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label" })

    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

  </div>

  <div class="field">
    @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label" })
    @Html.TextAreaFor(model => model.MetaDescription, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
  </div>

  <div class="field">
    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label" })

    @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control datepicker" } })
    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
  </div>

  <div class="field">
    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", onclick = "OpenModal('image')" } })
    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
    <img class="imagePreview" src="@Model.Image&width=200&height=140" id="imagePreview" />
  </div>

  <div class="field">
    @Html.LabelFor(model => model.Intro, htmlAttributes: new { @class = "control-label" })
    @Html.TextAreaFor(model => model.Intro, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Intro, "", new { @class = "text-danger" })
  </div>

  <div class="field">
    <label for="UrlPart">Url</label>
    <div class="input-group">
      <div class="input-group-prepend selectParent">
        <span class="input-group-text" id="inputGroupPrepend">/blog/</span>
      </div>
      @Html.EditorFor(model => model.UrlPart, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(model => model.UrlPart, "", new { @class = "text-danger" })
  </div>

  <div class="field">
    <label for="content">Content</label>
    <textarea id="content" name="content" class="richtext">
			@Model.Content
		</textarea>
  </div>

  <div class="field">
    <div class="col-md-offset-2 col-md-10">
      <button id="opslaan" type="submit" class="btn btn-info">Opslaan</button>
    </div>
  </div>

  <a href="/admin/blogitems/delete/@Model.Id" class="btn btn-danger" data-action-confirm>Verwijderen</a>
}