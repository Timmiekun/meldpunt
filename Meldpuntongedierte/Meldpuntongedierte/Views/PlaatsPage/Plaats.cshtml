@using Meldpunt.Utils;
@model PlaatsPageViewModel
@{
  // Default values
  ViewBag.HeaderTitle = "Meldpunt Ongedierte";
  ViewBag.Title = "Ongediertebestrijding " + Model.Content.Title + " - Meldpunt Ongedierte";
  ViewBag.Description = String.Format("Inwoners en bedrijven uit de gemeente {0} kunnen onze " +
    "bestrijdingsdienst bellen voor ratten, muizen, mieren, wespen of ander ongedierte in huis " +
    "of op de werkplek. Het verwijderen van een wespennest kan na het bestrijden. Instellingen " +
    "in {0} zoals scholen en kinderdagverblijven helpen wij vooral met muizenbestrijding " +
    "en rattenbestrijding. Ongediertebestrijding brengt altijd kosten met zich mee. Maak " +
    "daarom ook gebruik van onze tips en informatie.", Model.Content.Gemeentenaam);

  // Curated items
  if (!String.IsNullOrEmpty(Model.Content.MetaTitle))
  {
    ViewBag.Title = Model.Content.MetaTitle;
  }

  if (!String.IsNullOrWhiteSpace(Model.Content.MetaDescription))
  {
    ViewBag.Description = Model.Content.MetaDescription;
  }




  List<ContentPageModel> homeMenu = ViewBag.HomeMenuItems as List<ContentPageModel>;
    }

    @section style{
  <link type="text/css" rel="stylesheet" href="/css/reactions.css?v=@((string)ViewBag.AppVersion)">
}

    @section script{
  <script type="text/javascript" src="/Scripts/reactions.js?v=@((string)ViewBag.AppVersion)">;</script>
}

    @section SD{
  <script type="application/ld+json">
    {
        "@("@context")": "http://schema.org/",
    "@("@type")": "Article",
    "dateModified" : "@Model.Content.LastModified.Value.ToString("yyyy-MM-dd")",
    "datePublished" : "@Model.Content.Published.Value.ToString("yyyy-MM-dd")",
    "headline": "@Model.Content.MetaDescription.TruncateAtWord(110)",
    "author" : "Meldpunt Ongedierte",
    "publisher" : "Meldpunt Ongedierte",
    "mainEntityOfPage" : "https://meldpuntongedierte.nl@(Model.Content.Url)"
    }
  </script>
}

    @section menu{
  <div class="menu">
    <h2>Bekijk ook</h2>
    <ul>
      <li class="showOnMobile"><a href="/">Home</a></li>
      @foreach (var page in homeMenu.OrderByDescending(p => p.Sort))
      {
        <li><a href="@page.Url">@page.MetaTitle</a></li>
      }
    </ul>
    <button class="goto-menu-mobile">menu</button>
  </div>
}

@*@if (Convert.ToBoolean(TempData["reactionsuccess"]))
  {
    <div class="reaction-recieved">
      <h2>Bedankt!</h2>
      <p>Bedankt voor uw melding. We nemen het in behandeling.</p>
    </div>
  }*@

@if (!String.IsNullOrWhiteSpace(Model.Content.Content) || !String.IsNullOrEmpty(Model.TemplateContent))
{
  <h1 class="plaatsheader"><span class="pre-header">Meldpunt Ongediertebestrijding</span> @Model.Content.Title</h1>
  <div class="phone-button phone-icon"><a href="tel:@Model.Content.PhoneNumber">Maak een afspraak</a></div>
  <a class="phone-button" href="#melding" data-action="open-reaction-form">Doe een melding</a>

  @*<a class="phone-button whatsapp-icon" href="https://api.whatsapp.com/send?phone=+31611690664&text=">Contact via whatsapp</a>*@

  <div class="aankleuren">
    <div class="folder-image">
      <a href="/muizen/muizenbestrijding">
        <figure title="muizen" style="background-image:url(/Images/aankleuren/Muizen.jpg)">
          <img alt="muizen bestrijden" src="/Images/aankleuren/Muizen.jpg" />
          <figcaption>Muizen</figcaption>
        </figure>
      </a>
    </div>
    <div class="folder-image">
      <a href="/ratten/rattenbestrijding">
        <figure title="ratten" style="background-image:url(/Images/aankleuren/Ratten.jpg)">
          <img alt="ratten bestrijden" src="/Images/aankleuren/Ratten.jpg" />
          <figcaption>Ratten</figcaption>
        </figure>
      </a>
    </div>
    <div class="folder-image">
      <a href="/insectengids/wespen/wespenbestrijding">
        <figure title="wespen" style="background-image:url(/Images/aankleuren/Wespen.jpg)">
          <img alt="wespen bestrijden" src="/Images/aankleuren/Wespen.jpg" />
          <figcaption>Wespen</figcaption>
        </figure>
      </a>
    </div>
    <div class="folder-image">
      <a href="/mieren/mierenbestrijding">
        <figure title="mieren" style="background-image:url(/Images/aankleuren/Mieren.jpg)">
          <img alt="mieren bestrijden" src="/Images/aankleuren/Mieren.jpg" />
          <figcaption>Mieren</figcaption>
        </figure>
      </a>
    </div>
    <div class="folder-image">
      <a href="/insectengids">
        <figure title="insectengids" style="background-image:url(/Images/aankleuren/Overige.jpg)">
          <img alt="insecten bestrijden" src="/Images/aankleuren/Overige.jpg" />
          <figcaption>Overige</figcaption>
        </figure>
      </a>
    </div>
  </div>

  <article class="created-content">
    @Html.Raw(Model.TemplateContent ?? Model.Content.Content)
  </article>

}
else if (!String.IsNullOrWhiteSpace(Model.Content.PlaatsNaam))
{
  @Html.Partial("Smurfdorp", Model.Content);
}
else
{
  @Html.Partial("Plaats_Static_Content", Model.Content);
}

@if (Model.Content.Plaatsen.Any() && Model.Content.Plaatsen.Count() > 1)
{
  <h2>Indeling</h2>
  <p>Onder de gemeente @Model.Content.Gemeentenaam vallen de plaatsen: @Html.Raw(String.Join(", ", Model.Content.Plaatsen.Where(p => p != Model.Content.Gemeentenaam)))</p>
}

@Html.Partial("ReactionForm", new ReactionModel { GemeenteNaam = Model.Content.Title })

@if (Model.Reactions.Any())
{
  <div class="reactions">
    <h2>Actuele meldingen</h2>
    @foreach (var reaction in Model.Reactions.OrderByDescending(r => r.Created))
    {
      <div class="reaction">
        <date>@reaction.Created.ToString("f")</date>
        <p>“@reaction.SenderDescription”</p>
      </div>
    }
  </div>
}

@helper getLinkForPlaats(string plaats)
{
  string url = string.Format("/ongediertebestrijding-{0}/{1}", Model.Content.Gemeentenaam.XmlSafe(), plaats.XmlSafe());
  var link = string.Format("<a href=\"{0}\">{1}</a>", url, plaats);
  @Html.Raw(link)
}